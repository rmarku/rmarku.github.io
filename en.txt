1:HL["/_next/static/css/560aa6f01920314e.css",{"as":"style"}]
0:["uJsrT_mU4Ar02LLh_w7DN",[[["",{"children":[["lng","en","d"],{"children":["__PAGE__?{\"lng\":\"en\"}",{}]}]},"$undefined","$undefined",true],"$L2",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/560aa6f01920314e.css","precedence":"next"}]],["$L3",null]]]]]
4:I{"id":"82268","chunks":["272:static/chunks/webpack-2b1177573bff4436.js","130:static/chunks/c9fe67fc-7888d918edb18f3f.js","625:static/chunks/625-296f1e8020bb20a0.js"],"name":"","async":false}
5:I{"id":"22989","chunks":["272:static/chunks/webpack-2b1177573bff4436.js","130:static/chunks/c9fe67fc-7888d918edb18f3f.js","625:static/chunks/625-296f1e8020bb20a0.js"],"name":"","async":false}
2:[["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L5",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L6",null],"segment":["lng","en","d"]},"styles":[]}],null]
3:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Blog | Martín Marcucci site"}],["$","meta","2",{"name":"description","content":"List of blog articles about tech, electronics, software and other greate stuff"}],["$","link","3",{"rel":"author","href":"https://www.marku.me"}],["$","meta","4",{"name":"author","content":"Martín Marcucci"}],["$","meta","5",{"name":"generator","content":"Next.js"}],["$","meta","6",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","7",{"name":"creator","content":"Martín Marcucci"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://www.marku.me/es"}],["$","link","11",{"rel":"alternate","hrefLang":"en-US","href":"https://www.marku.me/en"}],["$","link","12",{"rel":"alternate","hrefLang":"es-ES","href":"https://www.marku.me/es"}],["$","link","13",{"rel":"alternate","hrefLang":"es-AR","href":"https://www.marku.me/es"}]]
7:I{"id":"72669","chunks":["798:static/chunks/48f48bd6-fb4a34fd9fd57c0c.js","416:static/chunks/416-cdca52ad212d679e.js","962:static/chunks/962-491ff7342213e5ce.js","695:static/chunks/app/[lng]/layout-0930426a19e997cc.js"],"name":"","async":false}
6:["$","html",null,{"lang":"en","dir":"ltr","children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","href":"/favicon.ico"}],["$","$L7",null,{"id":"theme","strategy":"beforeInteractive","children":"\n\t\t\t\t(()=>{\n\t\t\t\t\t// Initial theme resolve before React render.\n          const b = document.body\n\n\t\t\t\t\tconst is_dark = (()=>{\n\t\t\t\t\t\tconst value = window.localStorage.getItem('dark')\n\t\t\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\t\t\treturn value === 'true'\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn window.matchMedia('(prefers-color-scheme: dark)').matches\n\t\t\t\t\t})();\n\n\t\t\t\t\tb.classList[is_dark ? 'add' : 'remove']('dark')\n          window.localStorage.setItem('dark', is_dark)\n\t\t\t\t})();\n\t\t\t"}]]}],["$","body",null,{"className":"dark","children":["$","div",null,{"className":"flex flex-col min-h-screen","children":["$L8",["$","main",null,{"className":"flex-grow container mx-auto py-8 px-4","children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children",["lng","en","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L5",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L9",null],"segment":"__PAGE__?{\"lng\":\"en\"}"},"styles":[]}]}],["$","footer",null,{"className":"bg-gray-800 text-white py-4","children":["$","div",null,{"className":"container mx-auto text-center","children":["$","p",null,{"className":"text-xs font-semibold","children":"Created by Ricardo Martín Marcucci, © 2019"}]}]}]]}]}]]}]
a:I{"id":"40269","chunks":["269:static/chunks/269-185af5fa58bc3c16.js","242:static/chunks/app/[lng]/cv/page-9551f24aee9f5d4f.js"],"name":"","async":false}
b:I{"id":"50812","chunks":["416:static/chunks/416-cdca52ad212d679e.js","565:static/chunks/565-da68a88c7014ee95.js","792:static/chunks/792-73140925dc299955.js","982:static/chunks/app/[lng]/posts/[[...slug]]/page-43e8a2a80369eb7e.js"],"name":"","async":false}
c:I{"id":"99283","chunks":["798:static/chunks/48f48bd6-fb4a34fd9fd57c0c.js","416:static/chunks/416-cdca52ad212d679e.js","962:static/chunks/962-491ff7342213e5ce.js","695:static/chunks/app/[lng]/layout-0930426a19e997cc.js"],"name":"","async":false}
d:I{"id":"19390","chunks":["798:static/chunks/48f48bd6-fb4a34fd9fd57c0c.js","416:static/chunks/416-cdca52ad212d679e.js","962:static/chunks/962-491ff7342213e5ce.js","695:static/chunks/app/[lng]/layout-0930426a19e997cc.js"],"name":"","async":false}
e:I{"id":"34000","chunks":["798:static/chunks/48f48bd6-fb4a34fd9fd57c0c.js","416:static/chunks/416-cdca52ad212d679e.js","962:static/chunks/962-491ff7342213e5ce.js","695:static/chunks/app/[lng]/layout-0930426a19e997cc.js"],"name":"","async":false}
f:I{"id":"54948","chunks":["798:static/chunks/48f48bd6-fb4a34fd9fd57c0c.js","416:static/chunks/416-cdca52ad212d679e.js","962:static/chunks/962-491ff7342213e5ce.js","695:static/chunks/app/[lng]/layout-0930426a19e997cc.js"],"name":"","async":false}
9:[["$","h2",null,{"className":"text-center","children":"Recent Posts"}],["$","section",null,{"children":[["$","article","2022/04/k3s-raspberry-pi",{"className":"container flex mt-2 border rounded-lg shadow-md p-4 max-w-5xl mx-auto","children":[["$","div",null,{"className":"h-36 w-1/4 min-w-max relative mr-5","children":["$","$La",null,{"src":"/images/posts/generic.avif","alt":"thumbnail","fill":true,"className":"object-cover rounded-lg"}]}],["$","div",null,{"className":"w-3/4 ","children":[["$","h3",null,{"children":["$","$Lb",null,{"href":"en/posts/2022/04/k3s-raspberry-pi","children":"Nodo master de Kubernetes en RPi4 con K3S"}]}],["$","div",null,{"className":"container flex justify-between","children":[["$","small",null,{"className":"italic","children":"April 17, 2022"}],["$","ul",null,{"className":"flex list-none","children":[["$","li","solid",{"className":"text-gray-700 bg-blue-200 m-0.5 px-2 rounded-full","children":["#","solid"]}],["$","li","good practice",{"className":"text-gray-700 bg-blue-200 m-0.5 px-2 rounded-full","children":["#","good practice"]}],["$","li","architecture",{"className":"text-gray-700 bg-blue-200 m-0.5 px-2 rounded-full","children":["#","architecture"]}]]}]]}],["$","p",null,{"className":"text-gray-500","children":"How to configure a K3S cluster"}]]}]]}],["$","article","2020/03/solid-principles",{"className":"container flex mt-2 border rounded-lg shadow-md p-4 max-w-5xl mx-auto","children":[["$","div",null,{"className":"h-36 w-1/4 min-w-max relative mr-5","children":["$","$La",null,{"src":"/images/posts/generic.avif","alt":"thumbnail","fill":true,"className":"object-cover rounded-lg"}]}],["$","div",null,{"className":"w-3/4 ","children":[["$","h3",null,{"children":["$","$Lb",null,{"href":"en/posts/2020/03/solid-principles","children":"Principios Solid (01/xx)"}]}],["$","div",null,{"className":"container flex justify-between","children":[["$","small",null,{"className":"italic","children":"March 5, 2020"}],["$","ul",null,{"className":"flex list-none","children":[["$","li","solid",{"className":"text-gray-700 bg-blue-200 m-0.5 px-2 rounded-full","children":["#","solid"]}],["$","li","good practice",{"className":"text-gray-700 bg-blue-200 m-0.5 px-2 rounded-full","children":["#","good practice"]}],["$","li","architecture",{"className":"text-gray-700 bg-blue-200 m-0.5 px-2 rounded-full","children":["#","architecture"]}]]}]]}],["$","p",null,{"className":"text-gray-500","children":"Introducción a los principios SOLID"}]]}]]}],["$","article","2013/servidor-openwrt-nfs-samba",{"className":"container flex mt-2 border rounded-lg shadow-md p-4 max-w-5xl mx-auto","children":[["$","div",null,{"className":"h-36 w-1/4 min-w-max relative mr-5","children":["$","$La",null,{"src":"/images/posts/openwrt.avif","alt":"thumbnail","fill":true,"className":"object-cover rounded-lg"}]}],["$","div",null,{"className":"w-3/4 ","children":[["$","h3",null,{"children":["$","$Lb",null,{"href":"en/posts/2013/servidor-openwrt-nfs-samba","children":"Servidor OpenWRT - Configurando NFS y SAMBA (obsoleto)"}]}],["$","div",null,{"className":"container flex justify-between","children":[["$","small",null,{"className":"italic","children":"November 19, 2013"}],["$","ul",null,{"className":"flex list-none","children":[["$","li","openwrt",{"className":"text-gray-700 bg-blue-200 m-0.5 px-2 rounded-full","children":["#","openwrt"]}],["$","li","linux",{"className":"text-gray-700 bg-blue-200 m-0.5 px-2 rounded-full","children":["#","linux"]}],["$","li","router",{"className":"text-gray-700 bg-blue-200 m-0.5 px-2 rounded-full","children":["#","router"]}]]}]]}],["$","p",null,{"className":"text-gray-500","children":"Configurar ahora los servicios Samba y NFS en nuestro router"}]]}]]}],["$","article","2013/servidor-openwrt",{"className":"container flex mt-2 border rounded-lg shadow-md p-4 max-w-5xl mx-auto","children":[["$","div",null,{"className":"h-36 w-1/4 min-w-max relative mr-5","children":["$","$La",null,{"src":"/images/posts/openwrt.avif","alt":"thumbnail","fill":true,"className":"object-cover rounded-lg"}]}],["$","div",null,{"className":"w-3/4 ","children":[["$","h3",null,{"children":["$","$Lb",null,{"href":"en/posts/2013/servidor-openwrt","children":"Servidor OpenWRT (obsoleto)"}]}],["$","div",null,{"className":"container flex justify-between","children":[["$","small",null,{"className":"italic","children":"November 18, 2013"}],["$","ul",null,{"className":"flex list-none","children":[["$","li","openwrt",{"className":"text-gray-700 bg-blue-200 m-0.5 px-2 rounded-full","children":["#","openwrt"]}],["$","li","linux",{"className":"text-gray-700 bg-blue-200 m-0.5 px-2 rounded-full","children":["#","linux"]}],["$","li","router",{"className":"text-gray-700 bg-blue-200 m-0.5 px-2 rounded-full","children":["#","router"]}]]}]]}],["$","p",null,{"className":"text-gray-500","children":"Configurar un router con la posibilidad de utilizar un pendrive como root externo"}]]}]]}],["$","article","2013/primero",{"className":"container flex mt-2 border rounded-lg shadow-md p-4 max-w-5xl mx-auto","children":[["$","div",null,{"className":"h-36 w-1/4 min-w-max relative mr-5","children":["$","$La",null,{"src":"/images/posts/generic.avif","alt":"thumbnail","fill":true,"className":"object-cover rounded-lg"}]}],["$","div",null,{"className":"w-3/4 ","children":[["$","h3",null,{"children":["$","$Lb",null,{"href":"en/posts/2013/primero","children":"First post"}]}],["$","div",null,{"className":"container flex justify-between","children":[["$","small",null,{"className":"italic","children":"November 13, 2013"}],["$","ul",null,{"className":"flex list-none","children":[["$","li","primer",{"className":"text-gray-700 bg-blue-200 m-0.5 px-2 rounded-full","children":["#","primer"]}]]}]]}],["$","p",null,{"className":"text-gray-500","children":"First post"}]]}]]}]]}]]
8:["$","header",null,{"className":"header text-white","children":["$","div",null,{"className":"container mx-auto flex justify-between items-center px-4","children":[["$","div",null,{"className":"flex items-center","children":[["$","nav",null,{"className":"hidden md:block","children":["$","ul",null,{"className":"flex space-x-4","children":[["$","li","Blog",{"children":["$","$Lb",null,{"href":"/en/","className":"hover:text-blue-300","children":"Blog"}]}],["$","li","About me",{"children":["$","$Lb",null,{"href":"/en/posts/about","className":"hover:text-blue-300","children":"About me"}]}],["$","li","CV",{"children":["$","$Lb",null,{"href":"/en/cv","className":"hover:text-blue-300","children":"CV"}]}],["$","li","Uses",{"children":["$","$Lb",null,{"href":"/en/posts/uses","className":"hover:text-blue-300","children":"Uses"}]}]]}]}],["$","$Lc",null,{"pages":[{"route":"/","text":"Blog"},{"route":"/posts/about","text":"About me"},{"route":"/cv","text":"CV"},{"route":"/posts/uses","text":"Uses"}],"lng":"en"}]]}],["$","h1",null,{"className":"bold","children":"Marku Blog "}],["$","div",null,{"className":"flex items-center","children":[["$","$Ld",null,{"posts":[{"title":"Uses","date":"19 de enero de 1970","description":"Conjunto de software y hardware que uso habitualmente.","hide":true,"thumbnail":"generic.avif","tags":["Uses"],"lang":"es","slug":"uses","post_lang":"es","content":"\nConjunto de software y hardware que uso habitualmente.\n\n## Software\n\n🐧 Desde los 15 años que utilizo **Linux**. Comencé con Conectiva Linux,\ndespués Mandrake, pasé por Slackware, Debian y luego me quedé en Gentoo por\nmucho tiempo. Hace poco tiempo probé arch y en este momento estoy con **Arch Linux**.\n\n📝 Para _JavaScript_ y _desarrollo web_ en general, utilizo [**Visual\nStudio Code**](https://code.visualstudio.com/) la versión OSS marca de\nArch Linux. Utilizo el tema\n[**Atom One Dark Theme**](https://marketplace.visualstudio.com/items?itemName=akamud.vscode-theme-onedark)\n\n📝 Para _C++_, utilizo [**CLion**](https://www.jetbrains.com/es-es/clion/)\nde JetBrains, muy buen y completo IDE. Estoy intentando migrar por completo\na Visual Studio Code, pero se extrañan mucho las bondades de CLion en C++.\n\nComo terminal utilizo **Yakuake** con **ZSH** y ayudado por **PowerLevel9**\n\nMi navegador preferido desde hace tiempo es **Firefox**, y siempre me he sentido a gusto con el.\n\n## Hardware\n\n💻 [**MSI GS63VR**](https://es.msi.com/Laptop/GS63VR-6RF-Stealth-Pro) i7-6700hq 16Gb GTX1060\n\n🖱️ [**Logitech MX Anywhere 2/2S**](https://www.logitech.com/es-ar/product/mx-anywhere-2s-flow)\nMuy bueno, con Bluetooth y SimpleLink hasta 3 dispositivos.\n\n🖥️ [**LG 23EA53**](https://www.lg.com/us/monitors/lg-23EA53V-P-led-monitor) Monitor 23\" FullHD\n\n📱 [**Samsung S8**](https://www.samsung.com/ar/smartphones/galaxy-s8/)\n\n🎧 [**Skullcandy Crusher**](https://www.skullcandy.com/shop/headphones/bluetooth-headphones/crusher-wireless) best Bass ever.\n","readTime":1},{"title":"Programación 3","date":"19 de enero de 1970","description":"En esta materia estudiamos algoritmos y estructuras de datos.","hide":true,"thumbnail":"generic.avif","tags":["UCC"],"lang":"es","slug":"courses/programacion-III","post_lang":"es","content":"\n## Bibliografia\n\n## Filminas\n","readTime":0},{"title":"Arq. de Software","date":"19 de enero de 1970","description":"En esta materia estudiamos sobre los patrones de diseño.","hide":true,"thumbnail":"generic.avif","tags":["UCC"],"lang":"es","slug":"courses/arq-software","post_lang":"es","content":"\n## Bibliografia\n\n## Filminas\n","readTime":0},{"title":"Arq. de Computadoras II","date":"19 de enero de 1970","description":"En esta materia estudiamos como funciona un procesador ARM y que metodos se utilizan para acelerar su funcionamiento.","hide":true,"thumbnail":"generic.avif","tags":["IUA"],"lang":"es","slug":"courses/arq-compu-II","post_lang":"es","content":"\nEn esta materia estudiaremos como funciona un procesador ARM y que metodos se utilizan para acelerar su funcionamiento.\n\n## Bibliografia\n\n## Filminas\n","readTime":0},{"title":"About","date":"19 de enero de 1970","description":"Descripción personal","hide":true,"thumbnail":"generic.avif","tags":["about","personal"],"lang":"es","slug":"about","post_lang":"es","content":"\n## Sobre el sitio\n\nDespués de bastante tiempo y varios intentos, decidí retomar la escritura de blog.\nPerdí todos los posteos de mi anterior blog, solo pude recuperar algunos gracias a\n[WayBack Machine](https://web.archive.org/web) de Internet Archive.\n","readTime":0},{"title":"Nodo master de Kubernetes en RPi4 con K3S","date":"17 de abril de 2022","description":"How to configure a K3S cluster","thumbnail":"generic.avif","tags":["solid","good practice","architecture"],"lang":"es","slug":"2022/04/k3s-raspberry-pi","post_lang":"es","content":"\nInstalar la imagen de raspbian Lite\n","readTime":0},{"title":"Principios Solid (01/xx)","date":"5 de marzo de 2020","description":"Introducción a los principios SOLID","thumbnail":"generic.avif","tags":["solid","good practice","architecture"],"lang":"es","slug":"2020/03/solid-principles","post_lang":"es","content":"\nEste es el primer post de una serie de artículos donde hablare de los principios de diseño SOLID. Estos principios fueron introducidos por Robert C. Martin _(\"Uncle Bob\")_ por el año 2000 e introduce cinco principios para el diseño en la programación orientada a Objetos.\n\nLas siglas SOLID provienen de la primera letra de cada uno de los principios, siendo estos:\n\n- **S** _(Single responsibility principle)_ Principio de Responsabilidad Única\n- **O** _(Open/closed principle)_ Principio de abierto/cerrado\n- **L** _(Liskov substitution principle)_ Principio de sustitución de Liskov\n- **I** _(Interface segregation principle)_ Principio de segregación de la interfaz\n- **D** _(Dependency inversion principle)_ Principio de inversión de la dependencia\n\nEstos principios son algunos de los muchos que existen en el diseño de software, por lo que esta bueno seguir aprendiendo sobre otros principios de diseño.\n\nA continuación, desarrollemos el primero.\n\n## Principio de Responsabilidad Única\n\nEste principio indica que cada módulo o clase debe tener responsabilidad sobre una sola parte de la funcionalidad del software. Es decir, encargarse de realizar sólo las tareas estrechamente ligadas con una determinada responsabilidad.\n\nRobert C. Martin, expresa que **\"Una clase debe tener solo un motivo para cambiar\"**, de esta forma se puede detectar si estamos violando este principio o no. Cuando deseamos agregar una funcionalidad o mejorar nuestro código y para lograrlo debemos modificar varias clases, lo mas probable es que estemos violando este principio.\n\nVamos a ver un ejemplo en C++:\n\nSupongamos que tenemos un programa hecho con la librería SFML y decidimos hace run\nobjeto Pelota. El único objetivo del objeto pelota es rebotar por la pantalla, por lo que podríamos tener algo así:\n\n```cpp file=<rootDir>/code/ball_sfml.cpp\n\n```\n\nBásicamente, verifica el objeto Ball (Pelota) se dedica a mantener la lógica de una pelota. Se puede crear, se puede mover y se puede dibujar. Para probar si se cumple el principio de responsabilidad simple, debemos ver si realmente se podría modificar esta clase si se quisiera modificar una responsabilidad.\n\nSupongamos que tenemos otra clase llamada Jugador, esta clase también tendría su constructor, su método mover y su método dibujar.\n\nDe manera siguiente, se dan dos situaciones, la primera es que debemos modificar el comportamiento de la pelota. Ahora la pelota debe desacelerar, por lo que nos ponemos y modificamos la función mover, para que la velocidad se reduzca en cada llamado.\nBien, esto es correcto, ya que esta modificación reduzca en la responsabilidad de la Pelota.\n\nAhora, la otra situación, es nuestro jefe que nos informa que se cambiará la lógica que está debajo del programa y que ya no se usará SFML y ahora se utilizará RayLib, otra biblioteca grafica, para realizar el programa.\n\nEsto desencadenará que tengamos que modificar tanto la clase Jugador como nuestra clase Pelota, quedando esta ultima clase algo así...\n\n```cpp file=<rootDir>/code/ball_raylib.cpp\n\n```\n\nComo se puede observar, tendremos que modificar tanto el constructor como la función que dibuja el objeto, y, probablemente, también debamos hacer lo mismo en la clase jugador. Esto nos está diciendo, que la clase pelota no tiene una sola responsabilidad como debería.\nAnalizando podemos darnos cuenta que la pelota tiene la responsabilidad de mantener el estado y funcionamiento de la pelota, pero también, la responsabilidad de saber como se dibuja una pelota. Esta clase, no debería realizar esta tarea, sino que debería haber una dedicada a saber como dibujar en pantalla los distintos objetos.\n\nUna forma de abordar esto, es crear una clase RenderManager, que sea la que sabe dibujar pelotas, por lo que solucionaríamos el problema delegándose esta responsabilidad a dicha clase.\nEcho esto, logramos que al tener que cambiar como dibujar, solo modificamos la clase RenderManager, y si modificamos el comportamiento de la pelota, modificamos solo la pelota.\n\nAplicando esto, nos podrían quedar los archivos de la siguiente manera:\n\n```cpp file=<rootDir>/code/ball.cpp\n\n```\n\nQuedándonos solo una clase dedicada al funcionamiento de la pelota y delegando lo de dibujar a la clase RenderManager\n\n```cpp file=<rootDir>/code/render_manager_sfml.cpp\n\n```\n\nEl proyecto completo se puede ver en https://github.com/UCC-ArquitecturaSoftwareI/principios-solid\n\n```js url=https://raw.githubusercontent.com/remarkjs/react-markdown/main/index.js\n\n```\n","readTime":3},{"title":"Servidor OpenWRT - Configurando NFS y SAMBA (obsoleto)","date":"19 de noviembre de 2013","description":"Configurar ahora los servicios Samba y NFS en nuestro router","tags":["openwrt","linux","router"],"thumbnail":"openwrt.avif","lang":"es","slug":"2013/servidor-openwrt-nfs-samba","post_lang":"es","content":"\nContinuando esta serie de post, paso a explicar como compartir carpetas de nuestro pendrive con un router OpenWRT. Para esto podemos usar SAMBA o NFS.\n\n- **SAMBA**: Samba tiene el problema de que utiliza \"muchos\" recursos de CPU, muchos es decir un 20%-40% del pequeño micro MIPs de la mayoría de los routers. Como ventaja es que se puede acceder casi desde cualquier plataforma, ya sea Windows, GNU/Linux, MacOs, Android, MediaCenters, etc...\n\n- **NFS**: NFS es el estándar de linux, como ventaja podemos decir que tiene casi todas las características de un sistema de archivos de linux, por lo que si nuestro cliente es linux, podremos configurar permisos, asignar usuarios, grupos, etc. Otra ventaja es que esta implementado a nivel de kernel, así que corre super rápido. Como desventaja, es que casi solo podemos utilizarlo en linux. Hay herramientas para utilizarlos en otros sistemas operativos, pero no de forma nativa.\n\nVamos a suponer que ya se realizo la instalación de OpenWRT y el soporte de USB. Si no lo has realizado, puedes seguir los pasos acá Servidor OpenWRT\n\n## Servidor NFS\n\nLo primero es instalar el paquete nfs-kernel-server, con esto estamos listos para compartir.\n\n```shell-session\nroot@OpenWrt:/$ opkg update\nroot@OpenWrt:/$ opkg install nfs-kernel-server\n```\n\nLuego debemos configurar las carpetas que compartiremos, aquí esta un ejemplo donde comparto el home en mi red interna\n\n```\n/etc/exports\n/home/    192.168.1.0/255.255.255.0(rw,all_squash,insecure,async,no_subtree_check)\n```\n\nLuego iniciamos y dejamos habilitados los demonios, así arrancan al prender el router.\n\n```shell-session\nroot@OpenWrt:/$ /etc/init.d/portmap enable\nroot@OpenWrt:/$ /etc/init.d/portmap start\nroot@OpenWrt:/$ /etc/init.d/nfsd enable\nroot@OpenWrt:/$ /etc/init.d/nfsd start\n```\n\n## Servidor SAMBA\n\nLa instalación de samba esta bastante mas pulida, tiene integración con Luci, por lo que podemos compartir carpetas desde la interfaz WEB, para instalarla, debemos instalar el paquete **luci-app-samba** y listo. Ahora desde la interfaz web, podemos entrar y en la sección Services -> Network Shares podemos compartir carpetas\n\nSi encuentras algún error, si piensas que algo se puede mejorar o simplemente te sirvió por favor deja tu comentario. Gracias.\n","readTime":2},{"title":"Servidor OpenWRT (obsoleto)","date":"18 de noviembre de 2013","description":"Configurar un router con la posibilidad de utilizar un pendrive como root externo","tags":["openwrt","linux","router"],"thumbnail":"openwrt.avif","lang":"es","slug":"2013/servidor-openwrt","post_lang":"es","content":"\nEn esta serie de post, voy a mostrar como poner a correr OpenWRT en un router, utilizaremos las opciones de EXTRoot para poder instalar mas paquetes en un Pendrive USB. Una vez echo eso, instalaremos mysql, php, lighttpd para poder servir nuestra web. También pondré Transmission para hacer de seeder y compartiré los archivos del pendrive/hhd USB por SAMBA y NFS. Esto es bastante parecido a lo que tengo implementado en casa.\n\nOpenWRT es una distribución linux que se dedica a hacer correr este sistema operativo en routers de distintas marcas, creando firmwares que reemplazan el original y le dan, al pequeño aparato, toda la potencia de un sistema operativo completo.\nConfiguración Inicial\n\nSupondré que ya has flasheado el router siguiendo la guía especifica para tu modelo y que lo que hay que hacer es configurarlo.\n\nentramos al router por telnet para nuestro primer inicio.\n\n```shellsession\nnc 192.168.1.1 23\n```\n\nluego, hacemos lo que nos recomienda, cambiar el password del usuario ROOT\n\n```shellsession\nroot@OpenWrt:/$ passwd\npasswd\nChanging password for root\nNew password: xxxxx\n\nRetype password: xxxxx\n\nPassword for root changed by root\nroot@OpenWrt:/$ exit\n```\n\ny luego de salir, podremos entrar y trabajar mas cómodamente por SSH. Aprovechamos para instalar unos cuantos paquetes que nos ayudaran a la hora de configurar el USB para que nuestro rootFS sea el USB\n\n```shellsession\nmartin@jarvis ~/ $ssh root@192.168.1.1\n _______                     ________        __\n|       |.-----.-----.-----.|  |  |  |.----.|  |_\n|   -   ||  _  |  -__|     ||  |  |  ||   _||   _|\n|_______||   __|_____|__|__||________||__|  |____|\n          |__| W I R E L E S S   F R E E D O M\n-----------------------------------------------------\nBARRIER BREAKER (Bleeding Edge, r38843)\n-----------------------------------------------------\n  * 1/2 oz Galliano         Pour all ingredients into\n  * 4 oz cold Coffee        an irish coffee mug filled\n  * 1 1/2 oz Dark Rum       with crushed ice. Stir.\n  * 2 tsp. Creme de Cacao\n-----------------------------------------------------\n\nroot@OpenWrt:/$ opkg update\n...\nroot@OpenWrt:/$ opkg install block-mount kmod-usb-storage blkid\n...\nroot@OpenWrt:/$ opkg install kmod-usb-storage-extras kmod-fs-ext4 kmod-fs-vfat\n```\n\ncon esto tenemos los drivers para soporte de dispositivos USB como pendrives y discos\n\ncontinuamos con montar nuestro dispositivo, podemos ver como los detecto el kernel con los siguientes comandos\n\n```shellsession\nroot@OpenWrt:/$ dmesg|grep -e sd.\n..\n[    8.640000]  sda: sda1 sda2\n..\n..\n[   12.220000]  sdb: sdb1 sdb2\n..\n\n```\n\nAcá se puede ver que tengo 2 dispositivos, con dos particiones cada uno. En lo particular utilice un HDD USB y un pendrive de 8Gb. En el pendrive voy a tener el root del OpenWRT y en el disco, todos los archivos de las web, la base de datos, los torrent, y archivos que comparta como servidor de archivos.\n\nEs conveniente también agregar una partición SWAP en el HDD, no recomiendo hacerlo en el pendrive ya que se rompería muy rápido. La partición SWAP ayudara al router cuando este con poca memoria. En mi caso tiene 128Mb de ram, y Transmission sabe consumir entre 30Mb y 75Mb según la cantidad de torrents que tenga cargados.\n\nBueno, a lo nuestro. Ahora montamos nuestro dispositivo (previamente particionado en Ext4, 3 o 2)... si no se monta, hay que reiniciar para que cargue los módulos USB y detecte el pendrive.\n\n```shell-session\nroot@OpenWrt:/$ mount /dev/sdb1 /mnt/\n```\n\nAhora debemos generar el archivo con el que montar los discos. El archivo es /etc/config/fstab y debe contener cada partición, el punto de montaje, y algunas otras características. En lo personal recomiendo utilizar los uuid de las particiones y no la ruta en el sistema de archivos (/dev/sdxx), debido a que al ser dispositivos USB, estos saben cambiar la ruta según cual le responde primero al kernel.\n\nPara obtener el uuid de una partición procedemos así:\n\n```shell-session\nroot@OpenWrt:/$ blkid /dev/sdb1\n/dev/sdb1: LABEL=\"ROOT\" UUID=\"be28121f-5446-44a3-adfd-3143f2a5c0c4\" TYPE=\"ext4\"\n```\n\nA continuación, debemos crear el archivo /etc/config/fstab. Acá hay un ejemplo del que yo utilizo. Nótese que la partición que voy a utilizar de ROOT (/dev/sdb1) tiene colocado el uuid y no hace referencia a SDB1.\n\n```ini\nconfig 'global'\n        option  anon_swap       '0'\n        option  anon_mount      '0'\n        option  auto_swap       '1'\n        option  auto_mount      '1'\n        option  delay_root      '5'\n        option  check_fs        '0'\n\nconfig 'swap'\n        option  uuid    'c0e1930a-dd0b-4029-ab4d-948b9a080469'\n        option  enabled '1'\n\nconfig 'mount'\n        option  target  '/home/martin'\n        option  uuid    '5cdcfae4-a8ec-4be2-bb6d-ca114acb56d9'\n        option  enabled '1'\n\nconfig 'mount'\n        option  target  '/'\n        option  uuid    'be28121f-5446-44a3-adfd-3143f2a5c0c4'\n        option  enabled '1'\n\nconfig 'swap'\n        option  uuid    '69a037bc-8257-4c9a-a26a-cf676ed50888'\n        option  enabled '1'\n\nconfig 'mount'\n        option  target   '/overlay-boot'\n        option  device   '/dev/mtdblock3'\n        option  fstype   'jffs2'\n        option  options  'rw,sync'\n        option  enabled  '1'\n```\n\nLa ultima configuración del archivo, el mount con target /overlay-boot, es para poder tener acceso al root que todavía esta grabado en la flash, por si es necesario realizar algún cambio.\n\nLo siguiente que necesitamos hacer es copiar toda la configuración actual de la flash al pendrive, para que tengan exactamente los mismos archivos y en el lugar que corresponda. Para esto debemos remontar el root en una carpeta, para luego poder obviarla con el comando tar. Mi primera linea lo que hace es crear el directorio HOME, ya que no viene por defecto y lo usaremos luego.\n\n```shell-session\nroot@OpenWrt:/$ mkdir /home\nroot@OpenWrt:/$ mkdir /tmp/cproot\nroot@OpenWrt:/$ mount --bind / /tmp/cproot\nroot@OpenWrt:/$ tar -C /tmp/cproot -cvf - . | tar -C /mnt -xvf -\n...\nroot@OpenWrt:/$ sync ; umount /mnt\nroot@OpenWrt:/$ umount /tmp/cproot\nroot@OpenWrt:/$ reboot\n```\n\nAhora, una vez reiniciado, con df -h podemos ver si realmente esta todo en orden, el rootfs debe mostrar en disponible, el tamaño de nuestro pendrive.\n\n```shell-session\nroot@OpenWrt:/$ df -h\nFilesystem                Size      Used Available Use% Mounted on\nrootfs                    6.5G     26.0M      6.1G   0% /\n/dev/root                 2.0M      2.0M         0 100% /rom\ntmpfs                    61.7M    552.0K     61.2M   1% /tmp\n/dev/sdb1                 6.5G     26.0M      6.1G   0% /\ntmpfs                   512.0K         0    512.0K   0% /dev\n```\n\nHerramientas de Router\n\nLo siguiente es instalar herramientas necesarias para poder trabajar cómodos con nuestro router. OpenWRT utiliza un sistema web llamado Luci, así que lo instalaremos para poder realizar las configuraciones a través de nuestro navegador\n\n```shell-session\nroot@OpenWrt:/$ opkg update\nroot@OpenWrt:/$ opkg install luci shadow-useradd mc\nroot@OpenWrt:/$ /etc/init.d/uhttpd start\nroot@OpenWrt:/$ /etc/init.d/uhttpd enable\n```\n\nListo, ahora podemos entrar a nuestro router con la url http://192.168.1.1/\n\nSi encuentras algún error, si piensas que algo se puede mejorar o simplemente te sirvió por favor deja tu comentario. Gracias.\n","readTime":5},{"title":"Primer post","date":"13 de noviembre de 2013","description":"Primer post","thumbnail":"generic.avif","tags":["first"],"lang":"es","slug":"2013/primero","post_lang":"es","content":"\nPara no perder la costumbre, comenzamos con un Hola Mundo. La idea de este blog va a\nser publicar varias cosas que voy haciendo en mi tiempo libre, como tambien mostrar\ny documentar algunos proyectos open-source que uso o he creado.\n","readTime":0},{"title":"About","date":"May 3, 2020","description":"Personal information","hide":true,"thumbnail":"generic.avif","tags":["about","personal"],"lang":"en","slug":"about","post_lang":"en","content":"\n## About the site\n\nAfter a long time and some tries, I decided to start writing again in the blog.\nI lost some post from my first blog, but I could save some thanks to\n[WayBack Machine](https://web.archive.org/web).\n","readTime":0},{"title":"First post","date":"November 13, 2013","description":"First post","thumbnail":"generic.avif","tags":["primer"],"lang":"en","slug":"2013/primero","post_lang":"en","content":"\nSo as not to lose the habit, we start with a Hello World. The idea of\nthis blog will be to publish several things I'm doing in my free time,\nas well as to show and document some open-source projects I use or\nhave created.\n","readTime":0},{"title":"Uses","date":"January 19, 1970","description":"Set of software and hardware tools that I frequently Use","hide":true,"thumbnail":"generic.avif","tags":["Uses"],"lang":"en","slug":"uses","post_lang":"en","content":"\nSet of software and hardware tools that I frequently Use .\n\n### Software\n\n🐧 Since I was 15, I use **Linux** as my operating System.\nI started with Conectiva Linux, then Mandrake, and later on Slackware,\nDebian, Arch Linux and finally settle on Gentoo after a long time..\n\n📝 For _JavaScript_ and _web development_ in general,\nI use [**Visual Studio Code**](https://code.visualstudio.com/),\nthe OSS Version. It's configured with\n[**Atom One Dark Theme**](https://marketplace.visualstudio.com/items?itemName=akamud.vscode-theme-onedark)\n\n📝 For _C++_, I use [**CLion**](https://www.jetbrains.com/es-es/clion/)\nfrom JetBrains, It's a great and complete IDE. I'm trying to change it by\nVisual Studio Code, but I miss a lot of functionality from CLion.\n\nAs Termina, I use **Kitty** with **ZSH** shell with **PowerLevel9**\n\nMy preferred browser is **Firefox** for a long time.\n\n### Hardware\n\n💻 [**MSI GS63VR**](https://es.msi.com/Laptop/GS63VR-6RF-Stealth-Pro)\ni7-6700hq 16Gb GTX1060\n\n🖱️ [**Logitech MX Anywhere 2/2S**](https://www.logitech.com/es-ar/product/mx-anywhere-2s-flow) Very good mouse with Bluetooth and SimpleLink up to 3 devices.\n\n🖥️ [**LG 23EA53**](https://www.lg.com/us/monitors/lg-23EA53V-P-led-monitor) 23\" Monitor FullHD\n\n🖥️ [**HP EliteDisplay E273q**](https://www.displayspecifications.com/es/model/d28afcd) 27\" Monitor 2k\n\n📱 [**Samsung S8**](https://www.samsung.com/ar/smartphones/galaxy-s8/)\n\n🎧 [**Skullcandy Crusher**](https://www.skullcandy.com/shop/headphones/bluetooth-headphones/crusher-wireless) best Bass ever.\n\n```plantuml Your title\nclass SimplePlantUMLPlugin {\n    + transform(syntaxTree: AST): AST\n}\n```\n\n![image](/images/featured.avif)\n","readTime":1},{"title":"Programing III","date":"January 19, 1970","description":"In this subject we study algorithms and data structures.","hide":true,"thumbnail":"generic.avif","tags":["UCC"],"lang":"en","slug":"courses/programacion-III","post_lang":"en","content":"\nComing Soon\n\n## Bibliografia\n\n## Filminas\n","readTime":0},{"title":"Software Architecture I","date":"January 19, 1970","description":"In this subject we study about design patterns, MVC and web development","hide":true,"thumbnail":"generic.avif","tags":["UCC"],"lang":"en","slug":"courses/arq-software","post_lang":"en","content":"\nComing Soon\n\n## Bibliography\n\n## Slides\n","readTime":0},{"title":"Computer Architecture II","date":"January 19, 1970","description":"In this subject we study how an ARM processor works and what methods are used to speed up its operation.","hide":true,"thumbnail":"generic.avif","tags":["IUA"],"lang":"en","slug":"courses/arq-compu-II","post_lang":"en","content":"\nIn this subject we study how an ARM processor works and what methods are used to speed up its operation.\n\n## Bibliography\n\n## Slides\n","readTime":0}],"serarchText":"Search"}],["$","$Le",null,{"locale":"en"}],["$","$Lf",null,{}]]}]]}]}]
